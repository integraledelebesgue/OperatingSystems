1. Opcje optymalizacji:
    1.1. Czasy tworzenia listy:
        1.1.1. Czas wykonania jest najdłuższy dla flagi -O2
        1.1.2. Czas wykonania jest najkrótszy dla flagi -O3
        1.1.3. Czas wykonania dla flagi -O1 jest dłuższy niż dla -O
        1.1.4. Czas wykonania dla flagi -Os jest drugim najgorszym
    Wniosek: Najlepsza jest optymalizacja -O3, optymalizacje -O2 i -Os pogarszają działanie

    1.2. Czasy czytania plików i zapisywania danych do pamięci:
        1.2.1. Czasy są najgorsze dla flag -O0 i -Os
        1.2.2. W pozostałych przypadkach czasy są porównywalne
    Wniosek: Optymalizacje -O0 i -Os nie prowadzą do przyspieszenia czytania plików i zapisu do pamięci

    1.3. Czasy usuwania wpisów z pamięci:
        1.3.1. Czasy są najgorsze dla flag -O0 i -O
        1.3.2. Czasy są najlepsze dla -O2 i -Os
        1.3.3. Czasy dla -O3 są niewiele gorsze od -O2
    Wniosek: Najlepsze są optymalizacje -O2 i -Os, -O3 również prowadzi do znacznego przyspieszenia działania

    1.4. Czasy usuwania (pustej) listy:
        1.4.1. Czas jest najlepszy dla -Os
        1.4.2. Czasy dla -O2 i -O3 są porównywalne, minimalnie gorsze od -Os
    Wniosek: Najlepsza jest optymalizacja -OS. -O2 i -O3 również polepszają działanie

Wniosek: W zależności od poziomu istotności poszczególnych funkcji programu można zastosować optymalizacje:
    -O3 dla szybkiej inicjalizacji list
    -Os dla szybkiego usuwania elementów i list
Najbardziej uniwersalna zdaje się być optymalizacja -O3

2. Sposób ładowania bibliotek: